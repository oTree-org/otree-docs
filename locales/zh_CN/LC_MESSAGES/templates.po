# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version:  oTree\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-20 21:57-0400\n"
"PO-Revision-Date: 2021-05-24 23:30+0800\n"
"Last-Translator: \n"
"Language: zh_CN\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/templates.rst:4
msgid "Templates"
msgstr "模板"

#: ../../source/templates.rst:7
msgid "Template syntax"
msgstr "模板语法"

#: ../../source/templates.rst:10
msgid "Variables"
msgstr "变量"

#: ../../source/templates.rst:12
msgid "You can display a variable like this:"
msgstr "你可以像下面这样显示一个变量："

#: ../../source/templates.rst:18
msgid "The following variables are available in templates:"
msgstr "下面的变量在模板中均可用："

#: ../../source/templates.rst:20
msgid "``player``: the player currently viewing the page"
msgstr "``player``: 当前正在浏览页面的玩家"

#: ../../source/templates.rst:21
msgid "``group``: the group the current player belongs to"
msgstr "``group``: 当前玩家所属的小组"

#: ../../source/templates.rst:22
msgid "``subsession``: the subsession the current player belongs to"
msgstr "``subsession``: 当前玩家所属的子会话"

#: ../../source/templates.rst:23
msgid "``participant``: the participant the current player belongs to"
msgstr "``participant``: 当前玩家所属的参与人"

#: ../../source/templates.rst:24
msgid "``session``: the current session"
msgstr "``session``: 当前会话"

#: ../../source/templates.rst:25
msgid "``C``"
msgstr "``C``"

#: ../../source/templates.rst:26
msgid "Any variables you passed with :ref:`vars_for_template`."
msgstr "任何你使用 :ref:`vars_for_template` 传递的变量。"

#: ../../source/templates.rst:29
msgid "Conditions (\"if\")"
msgstr "条件（“if”）"

#: ../../source/templates.rst:33
#, python-format
msgid ""
"oTree 3.x used two types of tags in templates: ``{{ }}`` and ``{% %}``. "
"Starting in oTree 5, however, you can forget about ``{% %}`` and just use"
" ``{{ }}`` everywhere if you want. The old format still works."
msgstr ""
"oTree 3.x 在模板中使用两种不同的标签：``{{ }}`` 与 ``{% %}``。但从oTree 5开始，你可以忘了 ``{% %}``"
" 并在任何你想使用的地方只用 ``{{ }}`` 。旧格式仍然可用。"

#: ../../source/templates.rst:41
msgid "With an 'else':"
msgstr "使用‘else’："

#: ../../source/templates.rst:52
msgid "Loops (\"for\")"
msgstr "循环（“for”）"

#: ../../source/templates.rst:61
msgid "Accessing items in a dict"
msgstr "获取字典中的元素"

#: ../../source/templates.rst:63
msgid ""
"Whereas in Python code you do ``my_dict['foo']``, in a template you would"
" do ``{{ my_dict.foo }}``."
msgstr "在Python代码中使用 ``my_dict['foo']`` 的地方，在模板中应当使用 ``{{ my_dict.foo }}``。"

#: ../../source/templates.rst:67
msgid "Comments"
msgstr "注释"

#: ../../source/templates.rst:81
msgid "Things you can't do"
msgstr "不正确的使用"

#: ../../source/templates.rst:83
msgid ""
"The template language is just for displaying values. You can't do math "
"(``+``, ``*``, ``/``, ``-``) or otherwise modify numbers, lists, strings,"
" etc. For that, you should use :ref:`vars_for_template`."
msgstr ""
"模板语言仅仅是为了显示值。你不能在其中做数学运算 (``+``, ``*``, ``/``, ``-``) "
"或者修改数字，列表，字符串等等。想要做这些事情，应当使用 :ref:`vars_for_template`。"

#: ../../source/templates.rst:89
msgid "How templates work: an example"
msgstr "模板是如何工作的：一个例子"

#: ../../source/templates.rst:91
msgid "oTree templates are a mix of 2 languages:"
msgstr "oTree模板是两种语言的混合："

#: ../../source/templates.rst:93
msgid "*HTML* (which uses angle brackets like ``<this>`` and ``</this>``)."
msgstr "*HTML* (使用尖角括号如 ``<this>`` 与 ``</this>``。)"

# Chris comment: I removed the word "Django". Could you double check please?
#: ../../source/templates.rst:94
msgid "*Template tags* (which use curly braces like ``{{ this }}``)"
msgstr "*模板标签* (使用大括号如 ``{{ this }}`` 与 ``{{ this }}``)"

#: ../../source/templates.rst:97
msgid "In this example, let's say your template looks like this:"
msgstr "在这个例子中，假定你的模板如下："

# Chris comment: I removed the word "Django". Could you double check please?
#: ../../source/templates.rst:113
msgid "Step 1: oTree scans template tags, produces HTML (a.k.a. \"server side\")"
msgstr "步骤1：oTree扫描模板标签，生成HTML（亦称“服务器端”）"

# Chris comment: I removed the word "Django"
#: ../../source/templates.rst:115
msgid ""
"oTree uses the current values of the variables to convert the above "
"template tags to plain HTML, like this:"
msgstr "oTree使用变量当前的值将模板标签转换为纯HTML，像下面这样："

#: ../../source/templates.rst:131
msgid ""
"Step 2: Browser scans HTML tags, produces a webpage (a.k.a. \"client "
"side\")"
msgstr "步骤2：浏览器扫描HTML标签，生成web页面（亦称“浏览器端”）"

#: ../../source/templates.rst:133
msgid ""
"The oTree server then sends this HTML to the user's computer, where their"
" web browser can read the code and display it as a formatted web page:"
msgstr "oTree服务器将HTML发送给用户的电脑，用户的web浏览器可以解析这些代码并将其显示为格式化的web页面："

# Chris comment: removed 'Django'
#: ../../source/templates.rst:139
msgid "Note that the browser never sees the template tags."
msgstr "注意浏览器永远不会收到模板标签。"

#: ../../source/templates.rst:142
msgid "The key point"
msgstr "要点"

#: ../../source/templates.rst:144
msgid ""
"If one of your pages doesn't look the way you want, you can isolate which"
" of the above steps went wrong. In your browser, right-click and \"view "
"source\". (Note: \"view source\" may not work in split-screen mode.)"
msgstr "如果页面没有如期望正常工作，你可以分开来看上面两步中哪一步出错了。在浏览器中，右键单击并“查看源代码”。（注意：“查看源代码”在分离屏幕模式下可能无法正常工作。）"

#: ../../source/templates.rst:149
msgid ""
"You can then see the pure HTML that was generated (along with any "
"JavaScript or CSS)."
msgstr "你可以看到生成的纯HTML（与JavaScript和CSS）。"

# Chris comment: removed 'django'
#: ../../source/templates.rst:152
msgid ""
"If the HTML code doesn't look the way you expect, then something went "
"wrong on the server side. Look for mistakes in your ``vars_for_template``"
" or your template tags."
msgstr "如果HTML代码看起来不是所期望的，那么可能服务器端出现了某种问题。可在 ``vars_for_template`` 或者模板标签中寻找错误。"

# Chris comment: removed 'django'
#: ../../source/templates.rst:155
msgid ""
"If there was no error in generating the HTML code, then it is probably an"
" issue with how you are using HTML (or JavaScript) syntax. Try pasting "
"the problematic part of the HTML back into a template, without the "
"template tags, and edit it until it produces the right output. Then put "
"the template tags back in, to make it dynamic again."
msgstr "如果生成的HTML代码没有任何错误，那么可能你使用了错误的HTML（或者JavaScript）语法。试着将HTML有问题的部分粘贴回模板中，去掉模板标签，编辑它直到输出正常。再尝试将模板标签加回去，使得页面重新成为动态的。"

#: ../../source/templates.rst:164
msgid "Images (static files)"
msgstr "图片（静态文件）"

#: ../../source/templates.rst:166
msgid ""
"The simplest way to include images, video, 3rd party JS/CSS libraries, "
"and other static files in your project is to host them online, for "
"example on Dropbox, Imgur, YouTube, etc."
msgstr "在项目中包含图片，视频，第三方JS/CSS库或者其他静态文件的最简单的方法是将它们在线存放，例如使用Dropbox，Imgur，YouTube等等。"

#: ../../source/templates.rst:169
msgid ""
"Then, put its URL in an <img> or <video> tag in your template, for "
"example:"
msgstr "然后，将URL包含在 <img> 或 <video> 标签内放在模板中，例如："

#: ../../source/templates.rst:175
msgid ""
"You can also store images directly in your project. (but note that large "
"file sizes can affect performance). oTree Studio has an image upload "
"tool. (If you are using a text editor, see :ref:`here <staticfiles>`.) "
"Once you have stored the image, you can display it like this:"
msgstr ""
"你也可以直接将图片存放在你的项目中。（但注意文件较大会影响性能）。oTree Studio有一个图片上传工具。（如果你使用文本编辑器，参考 "
":ref:`这里 <staticfiles>`。）将图片存储在项目中后，你可以像下面这样显示它："

#: ../../source/templates.rst:187
msgid "Dynamic images"
msgstr "动态图片"

#: ../../source/templates.rst:189
msgid ""
"If you need to show different images depending on the context (like "
"showing a different image each round), you can construct it in "
"``vars_for_template`` and pass it to the template, e.g.:"
msgstr ""
"如果你需要根据上下文显示不同的图片（比如每一轮显示不同的图片），那么你可以在 ``vars_for_template`` "
"中构建并将其传递给模板，例如："

#: ../../source/templates.rst:201
msgid "Then in the template:"
msgstr "然后在模板中使用："

#: ../../source/templates.rst:211
msgid "Includable templates"
msgstr "可包含的模板"

#: ../../source/templates.rst:213
msgid ""
"If you are copy-pasting the same content across many templates, it's "
"better to create an includable template and reuse it with ``{{ include_sibling "
"}}``."
msgstr "如果你将相同的内容在多个模板之间复制粘贴，更好的方案是创建一个可包含的模板并使用 ``{{ include_sibling }}`` 复用模板。"

#: ../../source/templates.rst:217
msgid ""
"For example, if your game has instructions that need to be repeated on "
"every page, make a template called ``instructions.html``, and put the "
"instructions there, for example:"
msgstr ""
"举例来说，如果在你的游戏中游戏说明需要在每一个页面上重复出现，那么就可以创建一个模板，叫做 "
"``instructions.html``，并将说明放入其中，例如："

#: ../../source/templates.rst:235
msgid ""
"If you are using oTree Studio, click the button to include a template. "
"Otherwise, create the file in your ``templates`` folder, and see the "
"sample games for examples of how to include the template (e.g. "
"``instructions_template``)."
msgstr ""
"如果你使用的是oTree Studio，点击一个按钮即可包含一个模板。如使用文本编辑器，则在 ``templates`` "
"文件夹中创建文件，然后查看示例游戏通过例子来弄明白如何包含模板（例如 ``instructions_template``）。"

#: ../../source/templates.rst:241
msgid "JavaScript and CSS"
msgstr "JavaScript 与 CSS"

#: ../../source/templates.rst:244
msgid "Where to put JavaScript/CSS code"
msgstr "将JavaScript/CSS代码放在何处"

#: ../../source/templates.rst:246
msgid ""
"You can put JavaScript and CSS anywhere just by using the usual "
"``<script></script>`` or ``<style></style>``, anywhere in your template."
msgstr ""
"你可以使用常见的 ``<script></script>`` 或 ``<style></style>`` "
"标签将JavaScript与CSS放在你模板的任意位置。"

#: ../../source/templates.rst:249
msgid ""
"If you have a lot of scripts/styles, you can put them in separate blocks "
"outside of ``content``: ``scripts`` and ``styles``. It's not mandatory to"
" do this, but: it keeps your code organized and ensures that things are "
"loaded in the correct order (CSS, then your page content, then "
"JavaScript)."
msgstr ""
"如果你有很多脚本/样式，你可以将它们放在 ``content`` 之外独立的部分： ``scripts`` and ``styles`` "
"中。这并非强制的要求，但这样做会使你的代码更有条理并确保页面按照顺序加载（CSS，然后是页面内容，然后是JavaScript）。"

#: ../../source/templates.rst:257
msgid "Customizing the theme"
msgstr "定制主题"

#: ../../source/templates.rst:259
msgid ""
"If you want to customize the appearance of an oTree element, here is the "
"list of CSS selectors:"
msgstr "如果你想要定制oTree元素的外观，下表列出了CSS选择器："

#: ../../source/templates.rst:263
msgid "Element"
msgstr "元素"

#: ../../source/templates.rst:263
msgid "CSS/jQuery selector"
msgstr "CSS/jQuery 选择器"

#: ../../source/templates.rst:265
msgid "Page body"
msgstr "页面主体"

#: ../../source/templates.rst:265
msgid "``.otree-body``"
msgstr "``.otree-body``"

#: ../../source/templates.rst:266
msgid "Page title"
msgstr "页面标题"

#: ../../source/templates.rst:266
msgid "``.otree-title``"
msgstr "``.otree-title``"

#: ../../source/templates.rst:267
msgid "Wait page (entire dialog)"
msgstr "等待页面（整个对话框）"

#: ../../source/templates.rst:267
msgid "``.otree-wait-page``"
msgstr "``.otree-wait-page``"

#: ../../source/templates.rst:268
msgid "Wait page dialog title"
msgstr "等待页面对话框标题"

#: ../../source/templates.rst:268
msgid "``.otree-wait-page__title`` (note: ``__``, not ``_``)"
msgstr "``.otree-wait-page__title`` (注意: ``__``, 而非 ``_``)"

#: ../../source/templates.rst:269
msgid "Wait page dialog body"
msgstr "等待页面对话框主体"

#: ../../source/templates.rst:269
msgid "``.otree-wait-page__body``"
msgstr "``.otree-wait-page__body``"

#: ../../source/templates.rst:270
msgid "Timer"
msgstr "计时器"

#: ../../source/templates.rst:270
msgid "``.otree-timer``"
msgstr "``.otree-timer``"

#: ../../source/templates.rst:271
msgid "Next button"
msgstr "下一步按钮"

#: ../../source/templates.rst:271
msgid "``.otree-btn-next``"
msgstr "``.otree-btn-next``"

#: ../../source/templates.rst:272
msgid "Form errors alert"
msgstr "表单错误警告"

#: ../../source/templates.rst:272
msgid "``.otree-form-errors``"
msgstr "``.otree-form-errors``"

#: ../../source/templates.rst:275
msgid ""
"For example, to change the page width, put CSS in your base template like"
" this:"
msgstr "举例来说，想要改变页面宽度，将CSS在基模板中放置如下："

#: ../../source/templates.rst:285
msgid ""
"To get more info, in your browser, right-click the element you want to "
"modify and select \"Inspect\". Then you can navigate to see the different"
" elements and try modifying their styles:"
msgstr "获取更多信息，可在浏览器中右键单击你想要修改的元素并选择“审查元素”。然后你可以导航到不同元素并试着改变它们的样式："

#: ../../source/templates.rst:291
msgid ""
"When possible, use one of the official selectors above. Don't use any "
"selector that starts with ``_otree``, and don't select based on Bootstrap"
" classes like ``btn-primary`` or ``card``, because those are unstable."
msgstr ""
"尽可能使用上面给出的官方选择器。不要使用任何以 ``_otree`` 开头或者基于Bootstrap类的选择器，如 ``btn-primary``"
" 或 ``card``，因为它们是不稳定的。"

#: ../../source/templates.rst:300
msgid "Passing data from Python to JavaScript (js_vars)"
msgstr "从Python向JavaScript传递数据（js_vars）"

#: ../../source/templates.rst:302
msgid ""
"To pass data to JavaScript code in your template, define a function "
"``js_vars`` on your Page, for example:"
msgstr "为了在模板中向JavaScript代码传递数据，在你的页面中定义一个 ``js_vars`` 方法，例如："

#: ../../source/templates.rst:313
msgid "Then, in your template, you can refer to these variables:"
msgstr "在模板中，你就可以像下面这样引用这些变量："

#: ../../source/templates.rst:323
msgid "Bootstrap"
msgstr "Bootstrap"

#: ../../source/templates.rst:325
msgid ""
"oTree comes with `Bootstrap "
"<https://getbootstrap.com/docs/5.0/components/alerts/>`__, a popular "
"library for customizing a website's user interface."
msgstr ""
"oTree使用了 `Bootstrap "
"<https://getbootstrap.com/docs/5.0/components/alerts/>`__，一个流行的用于定制网站用户界面的库。"

#: ../../source/templates.rst:328
msgid ""
"You can use it if you want a `custom style "
"<http://getbootstrap.com/css/>`__, or a `specific component "
"<http://getbootstrap.com/components/>`__ like a table, alert, progress "
"bar, label, etc. You can even make your page dynamic with elements like "
"`popovers <https://getbootstrap.com/docs/5.0/components/popovers/>`__, "
"`modals <https://getbootstrap.com/docs/5.0/components/modal/>`__, and "
"`collapsible text "
"<https://getbootstrap.com/docs/5.0/components/collapse/>`__."
msgstr ""
"如果你想要 `定制样式 <http://getbootstrap.com/css/>`__，或者 `特定组件 "
"<http://getbootstrap.com/components/>`__ "
"如表格，警告，进度条，标签，等等，你可以使用此库。你甚至可以让你的页面变得动态，通过使用组件如 `popovers "
"<https://getbootstrap.com/docs/5.0/components/popovers/>`__， `modals "
"<https://getbootstrap.com/docs/5.0/components/modal/>`__， 和 `collapsible "
"text <https://getbootstrap.com/docs/5.0/components/collapse/>`__。"

#: ../../source/templates.rst:335
msgid ""
"To use Bootstrap, usually you add a ``class=`` attribute to your HTML "
"element."
msgstr "使用Bootstrap，通常需要在HTML元素中添加一个 ``class=`` 属性。"

#: ../../source/templates.rst:338
msgid "For example, the following HTML will create a \"Success\" alert:"
msgstr "举例来说，下面得HTML会创建一个“Success” 警告："

#: ../../source/templates.rst:345
msgid "Mobile devices"
msgstr "移动设备"

#: ../../source/templates.rst:347
msgid ""
"Bootstrap tries to show a \"mobile friendly\" version when viewed on a "
"smartphone or tablet."
msgstr "Bootstrap会在手机或平板上试着显示一个“移动端友好”的版本。"

#: ../../source/templates.rst:352
msgid "Charts"
msgstr "图表"

#: ../../source/templates.rst:354
msgid ""
"You can use any HTML/JavaScript library for adding charts to your app. A "
"good option is `HighCharts <http://www.highcharts.com/demo>`__, to draw "
"pie charts, line graphs, bar charts, time series, etc."
msgstr ""
"你可以使用任何HTML/JavaScript库来为你的应用添加图表。`HighCharts "
"<http://www.highcharts.com/demo>`__ 是一个不错的选择，它可以用来画饼状图，折线图，直方图，时间序列等等。"

#: ../../source/templates.rst:358
msgid "First, include the HighCharts JavaScript::"
msgstr "首先，引入HighCharts JavaScript："

#: ../../source/templates.rst:363
msgid ""
"Go to the HighCharts `demo site <http://www.highcharts.com/demo>`__ and "
"find the chart type that you want to make. Then click \"edit in "
"JSFiddle\" to edit it to your liking, using hardcoded data."
msgstr ""
"在HighCharts `demo site <http://www.highcharts.com/demo>`__ "
"寻找你想要的图表类型。然后点击\"edit in JSFiddle\"将其编辑成你想要的样子，使用硬编码数据。"

#: ../../source/templates.rst:368
msgid ""
"Then, copy-paste the JS and HTML into your template, and load the page. "
"If you don't see your chart, it may be because your HTML is missing the "
"``<div>`` that your JS code is trying to insert the chart into."
msgstr ""
"然后，复制粘贴JS与HTML到你的模板中，并加载页面。如果你没有看到你的图表，可能是因为JS代码试图插入图表的那一部分HTML缺少了 "
"``<div>`` 标签。"

#: ../../source/templates.rst:373
msgid ""
"Once your chart is loading properly, you can replace the hardcoded data "
"like ``series`` and ``categories`` with dynamically generated variables."
msgstr "一旦你的图表加载正常，你就可以将硬编码的数据替换为 ``series`` 和 ``categories`` 这样动态生成的变量。"

#: ../../source/templates.rst:376
msgid "For example, change this::"
msgstr "例如，将下面的代码："

#: ../../source/templates.rst:386
msgid "To this::"
msgstr "改为："

#: ../../source/templates.rst:391
msgid ""
"...where ``highcharts_series`` is a variable you defined in :ref:`js_vars"
" <js_vars>`."
msgstr "...此处 ``highcharts_series`` 是你在 :ref:`js_vars <js_vars>` 中定义的变量。"

#: ../../source/templates.rst:393
msgid ""
"If your chart is not loading, click \"View Source\" in your browser and "
"check if there is something wrong with the data you dynamically "
"generated."
msgstr "如果你的图表没有加载，在浏览器中单击“查看源码”检查是否是动态生成的数据出现了问题。"

#: ../../source/templates.rst:397
msgid "Miscellaneous"
msgstr "杂项"

#: ../../source/templates.rst:399
msgid ""
"You can round numbers using the ``to2``, ``to1``, or ``to0`` filters. For"
" example:: ``{{ 0.1234|to2}}`` outputs 0.12."
msgstr ""
"你可以使用 ``to2``，``to1``， 或 ``to0`` 过滤器来对数字取整。例如: ``{{ 0.1234|to2}}`` 的输出是 "
"0.12。"

